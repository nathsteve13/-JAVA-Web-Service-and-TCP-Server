-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema dbreservation
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dbreservation` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `dbreservation` ;

-- -----------------------------------------------------
-- Table `dbreservation`.`accounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbreservation`.`accounts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `dob` DATE NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `balance` DOUBLE NULL,
  `updated_at` DATETIME NOT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `dbreservation`.`locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbreservation`.`locations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `location_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `dbreservation`.`events`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbreservation`.`events` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `event_name` VARCHAR(45) NOT NULL,
  `event_date` DATETIME NOT NULL,
  `category` ENUM('konser', 'webinar', 'seminar', 'festival') NOT NULL,
  `status` ENUM('ongoing', 'available') NOT NULL,
  `participant_slot` INT NULL,
  `number_of_participant` INT NULL,
  `open_reservation_date` DATETIME NOT NULL,
  `close_reservation_date` DATETIME NOT NULL,
  `locations_id` INT NOT NULL,
  `price` DOUBLE NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_events_locations1_idx` (`locations_id` ASC),
  CONSTRAINT `fk_events_locations1`
    FOREIGN KEY (`locations_id`)
    REFERENCES `dbreservation`.`locations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `dbreservation`.`event_reservations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbreservation`.`event_reservations` (
  `account_id` INT NOT NULL,
  `event_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  `amount` DOUBLE NOT NULL,
  `status` ENUM('claimed', 'not claimed') NOT NULL,
  `claim_date` DATETIME NOT NULL,
  `claimed_date` DATETIME NULL,
  `updated_at` DATETIME NOT NULL,
  `created_at` DATETIME NOT NULL,
  INDEX `fk_account_ticket_account_idx` (`account_id` ASC),
  INDEX `fk_account_ticket_event1_idx` (`event_id` ASC),
  CONSTRAINT `fk_account_ticket_account`
    FOREIGN KEY (`account_id`)
    REFERENCES `dbreservation`.`accounts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_account_ticket_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `dbreservation`.`events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `dbreservation`.`parkings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbreservation`.`parkings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `parking_area` ENUM('mall', 'hall', 'stadium') NOT NULL,
  `status` ENUM('reserved', 'available') NOT NULL,
  `available_date` DATETIME NOT NULL,
  `locations_id` INT NOT NULL,
  `price` DOUBLE NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_parkings_locations1_idx` (`locations_id` ASC),
  CONSTRAINT `fk_parkings_locations1`
    FOREIGN KEY (`locations_id`)
    REFERENCES `dbreservation`.`locations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `dbreservation`.`parking_reservations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbreservation`.`parking_reservations` (
  `accounts_id` INT NOT NULL,
  `parkings_id` INT NOT NULL,
  `quantity` INT NULL,
  `amount` DOUBLE NULL,
  `status` ENUM('claimed', 'not claimed') NULL,
  `claim_date` DATETIME NULL,
  `claimed_date` DATETIME NULL,
  INDEX `fk_parking_reservations_accounts1_idx` (`accounts_id` ASC),
  INDEX `fk_parking_reservations_parkings1_idx` (`parkings_id` ASC),
  CONSTRAINT `fk_parking_reservations_accounts1`
    FOREIGN KEY (`accounts_id`)
    REFERENCES `dbreservation`.`accounts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_parking_reservations_parkings1`
    FOREIGN KEY (`parkings_id`)
    REFERENCES `dbreservation`.`parkings` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- Insert data into accounts
INSERT INTO `dbreservation`.`accounts` (`name`, `dob`, `email`, `username`, `password`, `balance`, `created_at`, `updated_at`)
VALUES 
('Andi Wijaya', '1985-05-15', 'andi.wijaya@example.com', 'andiwijaya', 'password123', 100000.0, NOW(), NOW()),
('Budi Santoso', '1990-07-20', 'budi.santoso@example.com', 'budisantoso', 'password123', 200000.0, NOW(), NOW()),
('Citra Lestari', '1992-08-25', 'citra.lestari@example.com', 'citralestari', 'password123', 300000.0, NOW(), NOW()),
('Dewi Anggraeni', '1988-11-30', 'dewi.angg@example.com', 'dewiangg', 'password123', 400000.0, NOW(), NOW()),
('Eko Prasetyo', '1995-12-05', 'eko.prasetyo@example.com', 'ekoprasetyo', 'password123', 500000.0, NOW(), NOW());

-- Insert data into locations
INSERT INTO `dbreservation`.`locations` (`location_name`)
VALUES 
('Taman Mini Indonesia Indah'),
('Stadion Utama Gelora Bung Karno'),
('JCC Senayan'),
('Balai Kartini'),
('Plaza Senayan');

-- Insert data into events
INSERT INTO `dbreservation`.`events` (`event_name`, `event_date`, `category`, `status`, `participant_slot`, `number_of_participant`, `open_reservation_date`, `close_reservation_date`, `locations_id`, `price`, `description`)
VALUES 
('Konser Musik', '2024-07-10 19:00:00', 'konser', 'available', 100, 0, '2024-06-01 00:00:00', '2024-07-09 23:59:59', 1, 50000.0, 'Konser musik akbar'),
('Seminar Teknologi', '2024-07-15 10:00:00', 'seminar', 'available', 200, 0, '2024-06-10 00:00:00', '2024-07-14 23:59:59', 3, 30000.0, 'Seminar tentang tren teknologi terbaru'),
('Festival Seni', '2024-07-20 09:00:00', 'festival', 'available', 300, 0, '2024-06-15 00:00:00', '2024-07-19 23:59:59', 5, 20000.0, 'Festival seni lokal'),
('Webinar Bisnis', '2024-07-25 15:00:00', 'webinar', 'available', 150, 0, '2024-06-20 00:00:00', '2024-07-24 23:59:59', 2, 40000.0, 'Webinar tentang strategi bisnis'),
('Meetup Olahraga', '2024-07-30 08:00:00', 'konser', 'available', 250, 0, '2024-06-25 00:00:00', '2024-07-29 23:59:59', 4, 25000.0, 'Meetup untuk penggemar olahraga');

-- Insert data into event_reservations
INSERT INTO `dbreservation`.`event_reservations` (`account_id`, `event_id`, `quantity`, `amount`, `status`, `claim_date`, `claimed_date`, `created_at`, `updated_at`)
VALUES 
(1, 1, 2, 100000.0, 'claimed', '2024-06-10 00:00:00', '2024-06-10 00:00:00', NOW(), NOW()),  -- Claimed event reservation
(2, 2, 1, 30000.0, 'not claimed', '2024-07-15 09:00:00', NULL, NOW(), NOW()),
(3, 3, 3, 60000.0, 'not claimed', '2024-07-20 08:00:00', NULL, NOW(), NOW()),
(4, 4, 1, 40000.0, 'not claimed', '2024-07-25 14:00:00', NULL, NOW(), NOW()),
(5, 5, 1, 25000.0, 'not claimed', '2024-07-30 07:00:00', NULL, NOW(), NOW());

-- Insert data into parkings
INSERT INTO `dbreservation`.`parkings` (`parking_area`, `status`, `available_date`, `locations_id`, `price`, `created_at`, `updated_at`)
VALUES 
('mall', 'available', '2024-06-12 00:00:00', 1, 5000.0, NOW(), NOW()),
('hall', 'available', '2024-06-12 00:00:00', 2, 10000.0, NOW(), NOW()),
('stadium', 'available', '2024-06-12 00:00:00', 3, 15000.0, NOW(), NOW()),
('mall', 'available', '2024-06-12 00:00:00', 4, 20000.0, NOW(), NOW()),
('hall', 'available', '2024-06-12 00:00:00', 5, 25000.0, NOW(), NOW());

-- Insert data into parking_reservations
INSERT INTO `dbreservation`.`parking_reservations` (`accounts_id`, `parkings_id`, `quantity`, `amount`, `status`, `claim_date`, `claimed_date`)
VALUES 
(1, 1, 1, 5000.0, 'claimed', '2024-06-10 00:00:00', '2024-06-10 00:00:00'),  -- Claimed parking reservation with same location as the event
(2, 2, 2, 20000.0, 'not claimed', '2024-07-15 09:00:00', NULL),
(3, 3, 3, 45000.0, 'not claimed', '2024-07-20 08:00:00', NULL),
(4, 4, 1, 20000.0, 'not claimed', '2024-07-25 14:00:00', NULL),
(5, 5, 2, 50000.0, 'not claimed', '2024-07-30 07:00:00', NULL);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
